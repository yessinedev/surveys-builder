generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  clerkId   String     @unique
  email     String     @unique
  surveys   Survey[]
  responses Response[]

  // Add any additional user fields you need
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Survey {
  id          String     @id @default(cuid())
  title       String
  description String?
  questions   Question[]
  responses   Response[]
  status      String     @default("draft") // draft, published, closed
  createdBy   User       @relation(fields: [createdById], references: [id])
  createdById String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Question {
  id        String   @id @default(cuid())
  text      String
  type      String // text, multiple_choice, checkbox, etc.
  options   Json? // For multiple choice options
  required  Boolean  @default(false)
  survey    Survey   @relation(fields: [surveyId], references: [id])
  surveyId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Answer    Answer[]
}

model Response {
  id        String   @id @default(cuid())
  survey    Survey   @relation(fields: [surveyId], references: [id])
  surveyId  String
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  answers   Answer[]
  createdAt DateTime @default(now())
}

model Answer {
  id         String   @id @default(cuid())
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
  response   Response @relation(fields: [responseId], references: [id])
  responseId String
  content    Json // Can store text, selected options, etc.
  createdAt  DateTime @default(now())
}
